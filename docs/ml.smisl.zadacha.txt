Нейронная сеть, что такая она?

Проблемой является в том что общество запутанно двумя темами,

1. Заданная задача AI или "AI Problem Statement"
   - Автоматичеки искать параметры f(x)=y любых f(). Пары (x,y) заданны.
     x обычно тензор, и y скаляр, но y можеть и быть тензор.

2. Решение AI
   - Пары данеых лишь точки на гипер-пространстве

Первый слой, входные данные.
Второй слой, каждая точка - это гиперповерхность разделяает пространство.
И повторяется второй-третий, третий-четвертый..
Как простая и мощная идея, потому что вычисление очень быстро..
Кратко говоря,
Слой N точек, это
- Одна точка в N-мерном пространстве для следующего слоя..
- Области (каждая точка в слоем означает одну область) которая бывает точка из предыдущего слоя.

Главное, она способствует вычисление любую функцию через простую алгебру.

Как создать точки в слоях с смыслом?
Просто.
Посмотрим функцию XOR.

xy=00=11=0, xy=01=10=1

01=1 ----------- 11=0
   -             -
   -             -
   -             -
   -             -
00=0 ----------- 10=1

В прямоугольной координате как выше, точки (01) и (10) равно 1.
Нужны 2 линий чтобы разделить точки (01), (10) от точек (00), (11).
Один вариант: y > 0.5 - x, y < 1.5 - x.
В языке нейронной сети
 - Первый слой с 3 входными (a, x, y), где "a" является "bias unit" или ?
 - Второй слой две точки (p,q) с весами (w_a=-3, w_x=6.0, w_y=6.0), (w_a=3, w_x=-2.0, w_y=-2.0)
 - Функция активации второго слоя, f(z) := 1*(z>0)
 - Третый/Выходной слой, одна точка с весами (w_p=1.0, w_q=1.0).
 - Функция активации третего слоя, f(z) := 1*(z>=2)

Мы только что вичислили функцию XOR через алгебру.

Код R:

# Входные Данные
a=c(1,1,1,1)
x=c(0,0,1,1)
y=c(0,1,0,1)
output=xor(x,y)
# [1] FALSE  TRUE  TRUE FALSE

# Веса в первом слою
w_layer1 = matrix(c(c(-3.0,6.0,6.0),c(3,-2.0,-2.0)), nrow=3, ncol=2, byrow=FALSE)
w_layer1
#      [,1] [,2]
# [1,]   -3    3
# [2,]    6   -2
# [3,]    6   -2
input.axy = matrix(c(a,x,y), nrow = 4, ncol = 3)
input.axy
#      [,1] [,2] [,3]
# [1,]    1    0    0
# [2,]    1    0    1
# [3,]    1    1    0
# [4,]    1    1    1

input.axy %*% w_layer1

#
# Вычислить первый слой с 4 входными
#
l1.calc = 1*(input.axy %*% w_layer1 > 0)
l1.calc
# Так видно что первый и второй столбец соотвественно первой и второй точке.
#      [,1] [,2]
# [1,]    0    1
# [2,]    1    1
# [3,]    1    1
# [4,]    1    0

#
# Второй слой и русультат
#
l2 = rowSums(l1.calc)-1
l2
# [1] 0 1 1 0

Вот так создали нейронная сеть для вычисления функции XOR.
